{"name":"Benih","tagline":"Zelory standard android apps","body":"Benih\r\n======\r\nBenih merupakan template standar dari aplikasi android yang dibuat oleh Zelory. Benih sudah menangani beberapa hal yang sering menjadi komponen utama sebuah aplikasi android. Dengan Benih, developer tidak perlu dipusingkan lagi dengan hal-hal yang bukan esensial lagi, tapi cukup fokus pada inti dari permasalahan yang ingin diselesaikan. Benih akan mempermudah pengembangan aplikasi android, hal-hal seperti penanganan network, web services, load gambar dari internet, adapter recyclerview, handle item click di recyclerview dsb sudah ditangani dengan optimal. Benih diharapkan bisa mempermudah dan mempercepat proses pengembangan aplikasi.\r\n\r\nContoh Penggunaan\r\n-------\r\nTambahkan perintah berikut pada build.gradle mu:\r\n\r\n```groovy\r\napply plugin: 'me.tatarka.retrolambda'\r\n\r\nandroid {\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\nbuildscript {\r\n    repositories {\r\n        mavenCentral()\r\n    }\r\n    dependencies {\r\n        classpath 'me.tatarka:gradle-retrolambda:3.2.3'\r\n    }\r\n}\r\n\r\nrepositories {\r\n    mavenCentral()\r\n}\r\n\r\ndependencies {\r\n    compile 'id.zelory.benih:benih:0.2.0'\r\n}\r\n```\r\n\r\nBerikut ini adalah salah satu contoh penggunaan Benih untuk melakukan parsing JSON dari web services (API) yang kemudian akan di ubah ke dalam bentuk Object Java dan kemudian ditampilkan dalam RecyclerView. Sangat mudah dan simple, untuk melihat contoh lainnya silahkan lihat pada aplikasi <a href=\"https://github.com/zetbaitsu/Benih/tree/master/benihtes\">benihtes</a>\r\n\r\n#Model\r\n```java\r\npublic class Berita {\r\n    private String judul;\r\n    private String alamat;\r\n    private String gambar;\r\n    private String tanggal;\r\n    private String deskripsi;\r\n    private String isi;\r\n\r\n    //Getter and Setter...\r\n}\r\n```\r\n#API Services\r\n```java\r\npublic enum TaniPediaService {\r\n    HARVEST;\r\n    private final Api api;\r\n\r\n    TaniPediaService() {\r\n        api = BenihServiceGenerator.createService(Api.class, Api.BASE_URL);\r\n    }\r\n\r\n    public static TaniPediaService pluck() {\r\n        return HARVEST;\r\n    }\r\n\r\n    public Api getApi() {\r\n        return api;\r\n    }\r\n\r\n    public interface Api {\r\n        String BASE_URL = \"http://alamat-api.com\";\r\n\r\n        @GET(\"/berita\")\r\n        Observable<List<Berita>> getAllBerita();\r\n    }\r\n}\r\n```\r\n\r\n#Presenter\r\n```java\r\npublic class BeritaPresenter extends BenihPresenter<BeritaPresenter.View> {\r\n\r\n    public BeritaPresenter(View view) {\r\n        super(view);\r\n    }\r\n\r\n    public void loadListBerita() {\r\n        TaniPediaService.pluck()\r\n                .getApi()\r\n                .getAllBerita()\r\n                .compose(BenihScheduler.pluck().applySchedulers(BenihScheduler.Type.IO))\r\n                .subscribe(view::showListBerita, view::showError);\r\n    }\r\n\r\n    public interface View extends BenihPresenter.View {\r\n        void showListBerita(List<Berita> listBerita);\r\n    }\r\n}\r\n```\r\n\r\n#Adapter\r\n```java\r\npublic class BeritaRecyclerAdapter extends BenihRecyclerAdapter<Berita, BeritaHolder> {\r\n\r\n    public BeritaRecyclerAdapter(Context context) {\r\n        super(context);\r\n    }\r\n\r\n    @Override\r\n    protected int getItemResourceLayout(int viewType) {\r\n        return R.layout.item_berita;\r\n    }\r\n\r\n    @Override\r\n    public BeritaHolder onCreateViewHolder(ViewGroup parent, int viewType) {\r\n        return new BeritaHolder(getView(parent, viewType), itemClickListener, longItemClickListener);\r\n    }\r\n}\r\n```\r\n\r\n#ItemViewHolder\r\n```java\r\npublic class BeritaHolder extends BenihItemViewHolder<Berita> {\r\n    @Bind(R.id.text) TextView judul;\r\n\r\n    public BeritaHolder(View itemView, OnItemClickListener itemClickListener, OnLongItemClickListener longItemClickListener) {\r\n        super(itemView, itemClickListener, longItemClickListener);\r\n    }\r\n\r\n    @Override\r\n    public void bind(Berita berita) {\r\n        judul.setText(berita.getJudul());\r\n    }\r\n}\r\n```\r\n\r\n#Activity atau Fragment\r\n```java\r\npublic class MainActivity extends BenihActivity implements BeritaPresenter.View {\r\n    @Bind(R.id.recycler_view) BenihRecyclerView recyclerView;\r\n    private BeritaPresenter beritaPresenter;\r\n    private BeritaRecyclerAdapter adapter;\r\n\r\n    @Override\r\n    protected int getResourceLayout() {\r\n        return R.layout.activity_main;\r\n    }\r\n\r\n    @Override\r\n    protected void onViewReady(Bundle savedInstanceState) {\r\n        adapter = new BeritaRecyclerAdapter(this);\r\n        recyclerView.setUpAsList();\r\n        recyclerView.setAdapter(adapter);\r\n        beritaPresenter = new BeritaPresenter(this);\r\n        beritaPresenter.loadListBerita();\r\n    }\r\n\r\n    @Override\r\n    public void showListBerita(List<Berita> listBerita) {\r\n        adapter.add(listBerita);\r\n    }\r\n\r\n    @Override\r\n    public void showError(Throwable throwable) {\r\n        Snackbar.make(recyclerView, \"Tidak dapat terhubung ke server!\", Snackbar.LENGTH_LONG).show();\r\n    }\r\n}\r\n```\r\n\r\nLicense\r\n-------\r\n    Copyright (c) 2015 Zetra.\r\n    \r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}